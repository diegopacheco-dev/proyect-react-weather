{"version":3,"sources":["components/buscador/Buscador.js","components/forecast/Pronostico.js","components/forecast/Forecast.js","servicios/servicios.js","App.js","index.js"],"names":["Buscador","modificarCiudad","pronosticos","useState","termino","setTermino","data","labels","map","objClima","moment","dt","format","datasets","label","main","temp","borderWidth","backgroundColor","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","Pronostico","fechaYHoraString","style","color","src","weather","icon","alt","feels_like","humidity","Forecast","i","getClimaPorCiudad","ciudad","a","fetch","peticion","json","App","setPronosticos","setCiudad","useEffect","then","console","log","list","cod","alert","ReactDOM","render","document","getElementById"],"mappings":"+LAqEeA,EAjEE,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,YAAkB,EACrBC,mBAAS,IADY,mBAC5CC,EAD4C,KACnCC,EADmC,KAe/CC,EAAO,CACPC,OAXSL,EAAYM,KAAI,SAAAC,GAEzB,OADuBC,IAAqB,IAAdD,EAASE,IAAWC,OAAO,0BAWzDC,SAAU,CAAC,CACPC,MAAO,eACPR,KATIJ,EAAYM,KAAI,SAAAC,GACxB,OAAQA,EAASM,KAAKC,QASlBC,YAAa,EACbC,gBAAiB,eAYzB,OACI,qCACA,qBAAKC,UAAU,WAAf,SACI,qBAAKA,UAAU,SAAf,SACI,qBAAKA,UAAU,cAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAMC,SAbT,SAAAC,GACjBA,EAAEC,iBACFrB,EAAgBG,IAWI,SACI,qBAAKe,UAAU,aAAf,SACI,uBAAOI,KAAK,OAAOJ,UAAU,eAAeK,YAAY,gBAAgBC,MAAOrB,EAC/EsB,SAAU,SAACL,GACPhB,EAAWgB,EAAEM,OAAOF,sBAUhD,qBAAKN,UAAU,WAAf,SAEI,qBAAKA,UAAU,SAAf,SACA,cAAC,OAAD,CAAMb,KAAMA,YCpBTsB,EArCI,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEdoB,EAAmBnB,IAAmB,IAAZD,EAASE,IAASC,OAAO,uBACvD,OACI,qBAAKO,UAAU,2CAAf,SACA,qBAAKA,UAAU,cAAeW,MAAO,CAACC,MAAO,QAASb,gBAAiB,WAAvE,SACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,2CAAf,SACE,+BACGV,EAASM,KAAKC,KADjB,cAIF,qBAAKG,UAAU,yBAAf,SACE,qBAAKa,IAAG,2CAAsCvB,EAASwB,QAAQ,GAAGC,KAA1D,WAAyEC,IAAI,UAGzF,sBAAKhB,UAAU,MAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,4BAAG,oDACH,4BAAG,uCAAUU,UAEf,sBAAKV,UAAU,kBAAf,UACE,4BAAG,+DACH,4BAAG,mCAASV,EAASM,KAAKqB,WAAvB,kBAEL,sBAAKjB,UAAU,kBAAf,UACE,4BAAG,+CACH,4BAAG,iCAASV,EAASM,KAAKsB,2BCf3BC,EAbE,SAAC,GAAqB,IAAnBpC,EAAkB,EAAlBA,YAChB,OACI,qBAAKiB,UAAU,4DAAf,SAEQjB,EAAYM,KAAI,SAACC,EAAU8B,GACvB,OAAO,cAAC,EAAD,CAAY9B,SAAUA,GAAe8B,S,yBCLnDC,EAAiB,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACNC,MAAM,GAAD,OAJZ,mDAIY,cAAqBF,EAArB,kBAHjB,mCAGiB,kBADC,cACvBG,EADuB,gBAEVA,EAASC,OAFC,cAEvBvC,EAFuB,yBAGtBA,GAHsB,2CAAH,sDCmDfwC,EAhDH,WAAO,IAAD,EACsB3C,mBAAS,IAD/B,mBACTD,EADS,KACI6C,EADJ,OAEY5C,mBAAS,IAFrB,mBAETsC,EAFS,KAEDO,EAFC,KAyBhB,OAjBAC,qBAAU,WACO,KAAXR,GAIJD,EAAkBC,GAAQS,MAAK,SAAC5C,GAC9B6C,QAAQC,IAAI9C,EAAK+C,MAEC,OAAb/C,EAAKgD,IAKVC,MAAM,wBAJJR,EAAezC,EAAK+C,WAMvB,CAACZ,IAGF,mCACE,uBAAMtB,UAAU,eAAhB,UAEE,oBAAIA,UAAU,6BAA6BW,MAAO,CAACC,MAAO,WAA1D,qCAGA,sBAAKZ,UAAU,qCAAf,UACE,qBAAKA,UAAU,+CAAf,SACE,cAAC,EAAD,CAAUjB,YAAaA,MAEzB,qBAAKiB,UAAU,WAAf,SACE,cAAC,EAAD,CACElB,gBAlCY,SAACG,GACvB4C,EAAU5C,IAkCAF,YAAaA,e,OCxC3BsD,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.8d2c9c15.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport {Line} from \"react-chartjs-2\"\r\nimport moment from \"moment\";\r\n\r\nconst Buscador = ({ modificarCiudad, pronosticos }) => {\r\n    const [termino, setTermino] = useState(\"\");\r\n\r\n    \r\n\r\n    let labels = pronosticos.map(objClima => {\r\n        let fechaYHoraString = moment(objClima.dt * 1000).format(\"DD/MM/YYYY HH:mm:ss\");\r\n        return fechaYHoraString;        \r\n    })\r\n\r\n    let temps = pronosticos.map(objClima => {\r\n        return +objClima.main.temp;\r\n    });\r\n\r\n\r\n    let data = {\r\n        labels: labels,\r\n        datasets: [{\r\n            label: 'Temperaturas',\r\n            data: temps,\r\n            borderWidth: 1,\r\n            backgroundColor: '#516eff88'\r\n        }]\r\n    }\r\n    \r\n\r\nconst handleSubmit = e => {\r\n    e.preventDefault();\r\n    modificarCiudad(termino);\r\n}   \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row mb-4\">\r\n            <div className=\"col-12\">\r\n                <div className=\"card shadow\">\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Buscar ciudad\" value={termino} \r\n                                onChange={(e) => {\r\n                                    setTermino(e.target.value);\r\n                                }\r\n                                }/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"row mb-4\">\r\n            \r\n            <div className=\"col-12\">\r\n            <Line data={data}\r\n                    />\r\n            </div>\r\n        \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Buscador\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Pronostico = ({ objClima }) => {\r\n\r\n    let fechaYHoraString = moment(objClima.dt*1000).format(\"DD/MM/YYYY HH:mm:ss\")\r\n    return (\r\n        <div className=\"col-lg-12 col-md-4 col-sm-6 col-12 mb-3 \">\r\n        <div className=\"card shadow\"  style={{color: 'white', backgroundColor: '#5741D7' }}>\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 flex-centrado align-self-center\">\r\n                <h3>\r\n                  {objClima.main.temp}&#8451;\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-md-6 flex-centrado\">\r\n                <img src={`http://openweathermap.org/img/wn/${objClima.weather[0].icon}@2x.png`} alt=\"\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-xl-4 col-12\">\r\n                <p><small>Fecha y Hora:</small></p>\r\n                <p><strong> {fechaYHoraString}</strong></p>\r\n              </div>\r\n              <div className=\"col-xl-4 col-12\">\r\n                <p><small>Sensación térmica:</small></p>\r\n                <p><strong>{objClima.main.feels_like} &#8451;</strong></p>\r\n              </div>\r\n              <div className=\"col-xl-4 col-12\">\r\n                <p><small>Humedad:</small></p>\r\n                <p><strong>{objClima.main.humidity}</strong></p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default Pronostico\r\n","import React from 'react'\r\nimport Pronostico from './Pronostico'\r\n\r\nconst Forecast = ({ pronosticos }) => {\r\n    return (\r\n        <div className=\"row forecast flex-lg-wrap flex-nowrap pt-2 mb-4 ml-4 mr-4\">\r\n            {\r\n                pronosticos.map((objClima, i) => {\r\n                    return <Pronostico objClima={objClima} key={i}/>\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forecast\r\n","const URL_BACKEND = \"https://api.openweathermap.org/data/2.5/forecast\";\r\nconst APP_ID = \"d0b4480fa3020c44e505e9bba74cb3b6\";\r\n\r\nexport const getClimaPorCiudad = async ciudad => {\r\n    const peticion = await fetch(`${URL_BACKEND}?q=${ciudad}&appid=${APP_ID}&units=metric`);\r\n    const data = await peticion.json();\r\n    return data;\r\n}","import React, { useState, useEffect } from \"react\";\nimport Buscador from \"./components/buscador/Buscador\";\nimport Forecast from \"./components/forecast/Forecast\";\n// import Header from \"./components/Header\";\nimport { getClimaPorCiudad } from \"./servicios/servicios\";\n\nconst App = () => {\n  const [pronosticos, setPronosticos] = useState([]);\n  const [ciudad, setCiudad] = useState(\"\");\n\n  const modificarCiudad = (termino) => {\n    setCiudad(termino);\n  };\n\n  useEffect(() => {\n    if (ciudad === \"\") {\n      return;\n    }\n\n    getClimaPorCiudad(ciudad).then((data) => {\n      console.log(data.list);\n\n      if (+data.cod === 200) {\n        setPronosticos(data.list);\n        return;\n      }\n\n      alert(\"ciudad no encontrada\");\n    });\n  }, [ciudad]);\n\n  return (\n    <>\n      <main className=\"container-xl\">\n\n        <h1 className=\"mt-5 display-4 text-center\" style={{color: '#5741D7'}}>Pronóstico Del Clima</h1>\n\n\n        <div className=\"row mt-4 justify-content-md-center\">\n          <div className=\"col-lg-4 col-md-12 order-lg-first order-last\">\n            <Forecast pronosticos={pronosticos} />\n          </div>\n          <div className=\"col-md-8\">\n            <Buscador\n              modificarCiudad={modificarCiudad}\n              pronosticos={pronosticos}\n            />\n          </div>\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}